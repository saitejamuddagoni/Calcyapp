package com.example.imagelistview;

import android.content.Intent;
import android.os.Bundle;
import android.widget.Button;
import androidx.appcompat.app.AppCompatActivity;

public class MainActivity extends AppCompatActivity {

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        Button btn = findViewById(R.id.btnOpenGallery);
        btn.setOnClickListener(v -> {
            Intent intent = new Intent(MainActivity.this, ImageListActivity.class);
            startActivity(intent);
        });
    }
}


<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:orientation="vertical"
    android:gravity="center"
    android:layout_width="match_parent"
    android:layout_height="match_parent">

    <Button
        android:id="@+id/btnOpenGallery"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Show Images" />
</LinearLayout>


<?xml version="1.0" encoding="utf-8"?>
<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent">

    <LinearLayout
        android:id="@+id/container"
        android:orientation="vertical"
        android:padding="8dp"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"/>
</ScrollView>


package com.example.imagelistapp;

import android.content.res.Resources;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.os.Bundle;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.appcompat.app.AppCompatActivity;

public class ImageListActivity extends AppCompatActivity {

    LinearLayout container;

    // List of drawable resources
    int[] images = {
            R.drawable.pic1,
            R.drawable.pic2,
            R.drawable.pic3
    };

    String[] names = {
            "pic1.png",
            "pic2.jpg",
            "pic3.png"
    };

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_image_list);

        container = findViewById(R.id.container);

        loadImages();
    }

    private void loadImages() {
        Resources res = getResources();

        for (int i = 0; i < images.length; i++) {
            // Decode bitmap
            Bitmap bitmap = BitmapFactory.decodeResource(res, images[i]);

            // Calculate size in KB
            int bytes = bitmap.getByteCount();
            int sizeKB = bytes / 1024;

            addImageRow(bitmap, names[i], sizeKB + " KB");
        }
    }

    private void addImageRow(Bitmap bitmap, String name, String sizeText) {
        // Row container
        LinearLayout row = new LinearLayout(this);
        row.setOrientation(LinearLayout.HORIZONTAL);
        row.setPadding(8, 8, 8, 8);

        // ImageView
        ImageView imageView = new ImageView(this);
        imageView.setImageBitmap(bitmap);
        LinearLayout.LayoutParams imgParams = new LinearLayout.LayoutParams(200, 200);
        imageView.setLayoutParams(imgParams);

        // Text container
        LinearLayout textContainer = new LinearLayout(this);
        textContainer.setOrientation(LinearLayout.VERTICAL);
        textContainer.setPadding(16, 0, 0, 0);

        // Name
        TextView nameView = new TextView(this);
        nameView.setText(name);
        nameView.setTextSize(16);

        // Size
        TextView sizeView = new TextView(this);
        sizeView.setText(sizeText);
        sizeView.setTextSize(14);

        // Add text views
        textContainer.addView(nameView);
        textContainer.addView(sizeView);

        // Add into row
        row.addView(imageView);
        row.addView(textContainer);

        // Add row into main container
        container.addView(row);
    }
}


private void loadImages() {
    Resources res = getResources();

    for (int i = 0; i < images.length; i++) {
        // 1) Get compressed file size (bytes inside APK)
        int fileBytes = 0;
        InputStream is = null;
        try {
            is = res.openRawResource(images[i]);
            ByteArrayOutputStream baos = new ByteArrayOutputStream();
            byte[] buffer = new byte[4096];
            int read;
            while ((read = is.read(buffer)) != -1) {
                baos.write(buffer, 0, read);
            }
            fileBytes = baos.size();
            baos.close();
        } catch (Resources.NotFoundException | IOException e) {
            e.printStackTrace();
        } finally {
            if (is != null) {
                try { is.close(); } catch (IOException ignored) {}
            }
        }

        int fileKB = Math.max(1, fileBytes / 1024); // at least 1 KB

        // 2) (Optional) Get decoded in-memory size for comparison
        Bitmap bitmap = BitmapFactory.decodeResource(res, images[i]);
        int decodedKB = bitmap.getByteCount() / 1024;

        // Use whichever label you want â€” here I show file size
        displayList.add(names[i] + "   (" + fileKB + " KB)");
        // If you want to show both:
        // displayList.add(names[i] + "   (file: " + fileKB + " KB, decoded: " + decodedKB + " KB)");
    }
}
